{"ast":null,"code":"var _jsxFileName = \"/Users/juliatuvaleva/Desktop/dev/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ImagePopup from './ImagePopup';\nimport ConfirmationPopup from './ConfirmationPopup';\nimport React, { useEffect, useState } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { api } from '../utils/api.js';\nimport { escKey } from '../utils/constant.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [cardsList, setCards] = useState([]);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isDeleteConfirmPopupOpen, setIsDeleteConfirmPopupOpen] = useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [selectedCardDelete, setSelectedCardDelete] = useState(null);\n  const [currentUser, setCurrentUser] = useState({});\n  useEffect(() => {\n    api.getProfileInfo().then(userData => {\n      setCurrentUser(userData);\n    }).catch(error => {\n      console.log(error);\n    });\n    api.getInitialCards().then(cardsData => {\n      setCards(cardsData);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  useEffect(() => {\n    const close = e => {\n      if (e.keyCode === escKey) {\n        closeAllPopups();\n      }\n    };\n\n    document.addEventListener('keydown', close);\n    return () => document.removeEventListener('keydown', close);\n  }, []);\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleDeleteButtonClick(card) {\n    setIsDeleteConfirmPopupOpen(true);\n    setSelectedCardDelete(card);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n    setIsImagePopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsDeleteConfirmPopupOpen(false);\n    setIsImagePopupOpen(false);\n  }\n\n  function handleUpdateUser(formData) {\n    api.editProfileInfo(formData).then(userData => {\n      setCurrentUser(userData);\n      setIsEditProfilePopupOpen(false);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  function handleUpdateAvatar(formLink) {\n    api.editProfilePhoto(formLink).then(userData => {\n      setCurrentUser(userData);\n      setIsEditAvatarPopupOpen(false);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  function handleAddPlaceSubmit(cardForm) {\n    api.addNewCard(cardForm).then(newCard => {\n      setCards([newCard, ...cardsList]);\n      setIsAddPlacePopupOpen(false);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      setCards(cards => cards.filter(c => c._id !== card._id));\n      setIsDeleteConfirmPopupOpen(false);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Main, {\n          cards: cardsList,\n          onEditAvatar: handleEditAvatarClick,\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          onCardClick: handleCardClick,\n          onCardLike: handleCardLike,\n          onCardDelete: handleDeleteButtonClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          isOpen: isEditProfilePopupOpen,\n          onClose: closeAllPopups,\n          onUpdateUser: handleUpdateUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          isOpen: isEditAvatarPopupOpen,\n          onClose: closeAllPopups,\n          onUpdateAvatar: handleUpdateAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n          isOpen: isAddPlacePopupOpen,\n          onClose: closeAllPopups,\n          onAddPlace: handleAddPlaceSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ConfirmationPopup, {\n          card: selectedCardDelete,\n          isOpen: isDeleteConfirmPopupOpen,\n          onCardDelete: handleCardDelete,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n          card: selectedCard,\n          isOpen: isImagePopupOpen,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"4/MY7KgWfPD0VQbOfIX4bTmHMKo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/juliatuvaleva/Desktop/dev/mesto-react/src/components/App.js"],"names":["Header","Main","Footer","EditProfilePopup","EditAvatarPopup","AddPlacePopup","ImagePopup","ConfirmationPopup","React","useEffect","useState","CurrentUserContext","api","escKey","App","cardsList","setCards","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isDeleteConfirmPopupOpen","setIsDeleteConfirmPopupOpen","isImagePopupOpen","setIsImagePopupOpen","selectedCard","setSelectedCard","selectedCardDelete","setSelectedCardDelete","currentUser","setCurrentUser","getProfileInfo","then","userData","catch","error","console","log","getInitialCards","cardsData","close","e","keyCode","closeAllPopups","document","addEventListener","removeEventListener","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","handleDeleteButtonClick","card","handleCardClick","handleUpdateUser","formData","editProfileInfo","handleUpdateAvatar","formLink","editProfilePhoto","handleAddPlaceSubmit","cardForm","addNewCard","newCard","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","state","map","c","handleCardDelete","deleteCard","cards","filter"],"mappings":"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","sourcesContent":["import Header from './Header'\nimport Main from './Main'\nimport Footer from './Footer'\nimport EditProfilePopup from './EditProfilePopup'\nimport EditAvatarPopup from './EditAvatarPopup'\nimport AddPlacePopup from './AddPlacePopup'\nimport ImagePopup from './ImagePopup'\nimport ConfirmationPopup from './ConfirmationPopup'\nimport React, { useEffect, useState } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport {api} from '../utils/api.js';\nimport {escKey} from '../utils/constant.js';\n\nfunction App () {\n  const [cardsList, setCards] = useState([]);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isDeleteConfirmPopupOpen, setIsDeleteConfirmPopupOpen] = useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [selectedCardDelete, setSelectedCardDelete] = useState(null);\n  const [currentUser, setCurrentUser] = useState({});\n\n  useEffect(()=>{\n    api.getProfileInfo()\n      .then((userData) => {\n          setCurrentUser(userData);\n      })\n      .catch( (error) => {\n          console.log(error);\n      });\n\n    api.getInitialCards()\n    .then((cardsData) => {\n        setCards(cardsData);\n      })\n    .catch( (error) => {\n        console.log(error);\n    });\n  }, [])\n  \n  useEffect(() => {\n    const close = (e) => {\n      if(e.keyCode === escKey){\n        closeAllPopups()\n      }\n    }\n    document.addEventListener('keydown', close)\n    return () => document.removeEventListener('keydown', close)\n  },[])\n\n  function handleEditProfileClick () {\n    setIsEditProfilePopupOpen(true)\n  }\n\n  function handleAddPlaceClick () {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick () {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleDeleteButtonClick (card) {\n    setIsDeleteConfirmPopupOpen(true);\n    setSelectedCardDelete(card);\n  }\n\n  function handleCardClick (card) {\n    setSelectedCard(card);\n    setIsImagePopupOpen(true);   \n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false)\n    setIsAddPlacePopupOpen(false)\n    setIsEditAvatarPopupOpen(false)\n    setIsDeleteConfirmPopupOpen(false)\n    setIsImagePopupOpen(false);\n  }\n  \n  function handleUpdateUser (formData) {\n    api.editProfileInfo(formData)\n      .then((userData) => {\n        setCurrentUser(userData);\n        setIsEditProfilePopupOpen(false)\n       })\n      .catch( (error) => {\n          console.log(error);\n      });\n  }\n\n  function handleUpdateAvatar (formLink) {\n    api.editProfilePhoto(formLink)\n      .then((userData) => {\n        setCurrentUser(userData);\n        setIsEditAvatarPopupOpen(false)\n       })\n      .catch( (error) => {\n          console.log(error);\n      });\n  }\n\n  function handleAddPlaceSubmit (cardForm) {\n    api.addNewCard(cardForm)\n      .then((newCard) => {\n        setCards([newCard, ...cardsList]);\n        setIsAddPlacePopupOpen(false)\n       })\n      .catch( (error) => {\n          console.log(error);\n      });\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    \n    api.changeLikeCardStatus(card._id, !isLiked)\n       .then((newCard) => {\n          setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n        })\n       .catch( (error) => {\n          console.log(error);\n       });\n  } \n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id)\n        .then(() => {\n            setCards((cards) => cards.filter((c) => c._id !== card._id));\n            setIsDeleteConfirmPopupOpen(false);\n        })\n        .catch( (error) => {\n          console.log(error);\n       });\n\n  }\n  \n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"App\">\n        <div className=\"page\">\n        \n          <Header/>\n\n          <Main \n              cards={cardsList}\n              onEditAvatar={handleEditAvatarClick}\n              onEditProfile={handleEditProfileClick}\n              onAddPlace={handleAddPlaceClick}\n              onCardClick={handleCardClick}\n              onCardLike={handleCardLike}\n              onCardDelete={handleDeleteButtonClick}\n          />\n\n          <Footer/>\n\n          <EditProfilePopup isOpen={isEditProfilePopupOpen} \n                            onClose={closeAllPopups} \n                            onUpdateUser={handleUpdateUser}/>\n\n          <EditAvatarPopup isOpen={isEditAvatarPopupOpen} \n                           onClose={closeAllPopups} \n                           onUpdateAvatar={handleUpdateAvatar}/> \n\n          <AddPlacePopup isOpen={isAddPlacePopupOpen}\n                         onClose={closeAllPopups}\n                         onAddPlace={handleAddPlaceSubmit}/>\n\n          <ConfirmationPopup card = {selectedCardDelete}\n                             isOpen={isDeleteConfirmPopupOpen}\n                             onCardDelete={handleCardDelete}\n                             onClose={closeAllPopups}/>\n\n          <ImagePopup card={selectedCard} isOpen={isImagePopupOpen} onClose={closeAllPopups}/>\n        \n        </div>\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}