{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\n\nconst checkResponse = response => response.ok ? response.json() : Promise.reject(`Ошибка ${response.sttus}`);\n\nexport const register = (password, email) => {\n  console.log(password, email);\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(checkResponse);\n};\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(checkResponse);\n};\nexport const getContent = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  }).then(checkResponse).catch(err => console.log(err));\n};\n/*\nexport const authorize = (identifier, password) => {\n  return fetch(`${BASE_URL}/auth/local`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({identifier, password})\n  })\n  .then((response => response.json()))\n  .then((data) => {\n    if (data.user){\n      localStorage.setItem('jwt', data.jwt);\n      return data;\n    } else {\n      return;\n    }\n  })\n  .catch(err => console.log(err))\n};\n*/","map":{"version":3,"sources":["/Users/juliatuvaleva/Desktop/dev/mestoReact/src/auth.js"],"names":["BASE_URL","checkResponse","response","ok","json","Promise","reject","sttus","register","password","email","console","log","fetch","method","headers","body","JSON","stringify","then","authorize","getContent","token","catch","err"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAAjB;;AACP,MAAMC,aAAa,GAAIC,QAAD,IAAcA,QAAQ,CAACC,EAAT,GAAcD,QAAQ,CAACE,IAAT,EAAd,GAAgCC,OAAO,CAACC,MAAR,CAAgB,UAASJ,QAAQ,CAACK,KAAM,EAAxC,CAApE;;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACzCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAsBC,KAAtB;AACA,SAAOG,KAAK,CAAE,GAAEb,QAAS,SAAb,EAAuB;AAC/Bc,IAAAA,MAAM,EAAE,MADuB;AAE/BC,IAAAA,OAAO,EAAE;AACL,gBAAU,kBADL;AAEL,sBAAgB;AAFX,KAFsB;AAM/BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACT,MAAAA,QAAD;AAAWC,MAAAA;AAAX,KAAf;AANyB,GAAvB,CAAL,CAQNS,IARM,CAQDlB,aARC,CAAP;AASH,CAXM;AAaP,OAAO,MAAMmB,SAAS,GAAG,CAACV,KAAD,EAAQD,QAAR,KAAqB;AAC1C,SAAOI,KAAK,CAAE,GAAEb,QAAS,SAAb,EAAuB;AACjCc,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP,gBAAU,kBADH;AAEP,sBAAgB;AAFT,KAFwB;AAMjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACR,MAAAA,KAAD;AAAQD,MAAAA;AAAR,KAAf;AAN2B,GAAvB,CAAL,CAQNU,IARM,CAQDlB,aARC,CAAP;AASD,CAVI;AAYP,OAAO,MAAMoB,UAAU,GAAIC,KAAD,IAAW;AACjC,SAAOT,KAAK,CAAE,GAAEb,QAAS,WAAb,EAAyB;AACnCc,IAAAA,MAAM,EAAE,KAD2B;AAEnCC,IAAAA,OAAO,EAAE;AACP,gBAAU,kBADH;AAEP,sBAAgB,kBAFT;AAGP,uBAAkB,UAASO,KAAM;AAH1B;AAF0B,GAAzB,CAAL,CAQNH,IARM,CAQDlB,aARC,EASNsB,KATM,CASAC,GAAG,IAAIb,OAAO,CAACC,GAAR,CAAYY,GAAZ,CATP,CAAP;AAUH,CAXM;AAaP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\nconst checkResponse = (response) => response.ok ? response.json() : Promise.reject(`Ошибка ${response.sttus}`);\n\nexport const register = (password, email) => {\n    console.log(password, email);\n    return fetch(`${BASE_URL}/signup`, {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({password, email})\n    })\n    .then(checkResponse)\n}\n\nexport const authorize = (email, password) => {\n    return fetch(`${BASE_URL}/signin`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({email, password})\n    })\n    .then(checkResponse)\n  };\n\nexport const getContent = (token) => {\n    return fetch(`${BASE_URL}/users/me`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`,\n      }\n    })\n    .then(checkResponse)\n    .catch(err => console.log(err))\n}\n\n/*\nexport const authorize = (identifier, password) => {\n  return fetch(`${BASE_URL}/auth/local`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({identifier, password})\n  })\n  .then((response => response.json()))\n  .then((data) => {\n    if (data.user){\n      localStorage.setItem('jwt', data.jwt);\n      return data;\n    } else {\n      return;\n    }\n  })\n  .catch(err => console.log(err))\n};\n*/"]},"metadata":{},"sourceType":"module"}