{"ast":null,"code":"var _jsxFileName = \"/Users/juliatuvaleva/Desktop/dev/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ImagePopup from './ImagePopup';\nimport ConfirmationPopup from './ConfirmationPopup';\nimport React, { useEffect, useState } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { api } from '../utils/api.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [cardsList, setCards] = useState([]);\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [isDeleteConfirmationPopupOpen, setDeleteConfirmationPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState('');\n  useEffect(() => {\n    api.getProfileInfo().then(userData => {\n      setCurrentUser(userData);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  useEffect(() => {\n    api.getInitialCards().then(cardsData => {\n      setCards(cardsData);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  }\n\n  function handleDeleteButtonClick() {\n    setDeleteConfirmationPopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setEditAvatarPopupOpen(false);\n    setDeleteConfirmationPopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  function handleUpdateUser(formData) {\n    api.editProfileInfo(formData).then(userData => {\n      setCurrentUser(userData);\n      setEditProfilePopupOpen(false);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  function handleUpdateAvatar(formLink) {\n    api.editProfilePhoto(formLink).then(userData => {\n      setCurrentUser(userData);\n      setEditAvatarPopupOpen(false);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  function handleAddPlaceSubmit(cardForm) {\n    api.addNewCard(cardForm).then(newCard => {\n      setCards([newCard, ...cardsList]);\n      setAddPlacePopupOpen(false);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      setCards(cards => cards.filter(c => c._id !== card._id));\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Main, {\n          cards: cardsList,\n          onEditAvatar: handleEditAvatarClick,\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          onCardClick: handleCardClick,\n          onCardLike: handleCardLike,\n          onCardDelete: handleCardDelete,\n          onDeleteConfirmation: handleDeleteButtonClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          isOpen: isEditProfilePopupOpen,\n          onClose: closeAllPopups,\n          onUpdateUser: handleUpdateUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          isOpen: isEditAvatarPopupOpen,\n          onClose: closeAllPopups,\n          onUpdateAvatar: handleUpdateAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n          isOpen: isAddPlacePopupOpen,\n          onClose: closeAllPopups,\n          onAddPlace: handleAddPlaceSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ConfirmationPopup, {\n          card: selectedCard,\n          isOpen: isDeleteConfirmationPopupOpen,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), selectedCard && /*#__PURE__*/_jsxDEV(ImagePopup, {\n          card: selectedCard,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"gA0SYVzAJpBK79xRhy8SkmU89jw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/juliatuvaleva/Desktop/dev/mesto-react/src/components/App.js"],"names":["Header","Main","Footer","EditProfilePopup","EditAvatarPopup","AddPlacePopup","ImagePopup","ConfirmationPopup","React","useEffect","useState","CurrentUserContext","api","App","cardsList","setCards","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isDeleteConfirmationPopupOpen","setDeleteConfirmationPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","getProfileInfo","then","userData","catch","error","console","log","getInitialCards","cardsData","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","handleDeleteButtonClick","handleCardClick","card","closeAllPopups","handleUpdateUser","formData","editProfileInfo","handleUpdateAvatar","formLink","editProfilePhoto","handleAddPlaceSubmit","cardForm","addNewCard","newCard","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","state","map","c","handleCardDelete","deleteCard","cards","filter"],"mappings":"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","sourcesContent":["import Header from './Header'\nimport Main from './Main'\nimport Footer from './Footer'\nimport EditProfilePopup from './EditProfilePopup'\nimport EditAvatarPopup from './EditAvatarPopup'\nimport AddPlacePopup from './AddPlacePopup'\nimport ImagePopup from './ImagePopup'\nimport ConfirmationPopup from './ConfirmationPopup'\nimport React, { useEffect, useState } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport {api} from '../utils/api.js';\n\nfunction App () {\n  const [cardsList, setCards] = useState([]);\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [isDeleteConfirmationPopupOpen, setDeleteConfirmationPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState('');\n\n  useEffect(()=>{\n    api.getProfileInfo()\n      .then((userData) => {\n          setCurrentUser(userData);\n      })\n      .catch( (error) => {\n          console.log(error);\n      });\n  }, [])\n\n  useEffect(()=>{\n    api.getInitialCards()\n      .then((cardsData) => {\n          setCards(cardsData);\n       })\n      .catch( (error) => {\n          console.log(error);\n      });\n  }, [])\n\n\n  function handleEditProfileClick () {\n    setEditProfilePopupOpen(true)\n  }\n\n  function handleAddPlaceClick () {\n    setAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick () {\n    setEditAvatarPopupOpen(true);\n  }\n\n  function handleDeleteButtonClick () {\n    setDeleteConfirmationPopupOpen(true);\n  }\n\n  function handleCardClick (card) {\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setEditProfilePopupOpen(false)\n    setAddPlacePopupOpen(false)\n    setEditAvatarPopupOpen(false)\n    setDeleteConfirmationPopupOpen(false)\n    setSelectedCard(null)\n  }\n  \n  function handleUpdateUser (formData) {\n    api.editProfileInfo(formData)\n      .then((userData) => {\n        setCurrentUser(userData);\n        setEditProfilePopupOpen(false)\n       })\n      .catch( (error) => {\n          console.log(error);\n      });\n  }\n\n  function handleUpdateAvatar (formLink) {\n    api.editProfilePhoto(formLink)\n      .then((userData) => {\n        setCurrentUser(userData);\n        setEditAvatarPopupOpen(false)\n       })\n      .catch( (error) => {\n          console.log(error);\n      });\n  }\n\n  function handleAddPlaceSubmit (cardForm) {\n    api.addNewCard(cardForm)\n      .then((newCard) => {\n        setCards([newCard, ...cardsList]);\n        setAddPlacePopupOpen(false)\n       })\n      .catch( (error) => {\n          console.log(error);\n      });\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    \n    api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n    });\n  } \n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id)\n        .then(() => {\n            setCards((cards) => cards.filter((c) => c._id !== card._id));\n    });\n  } \n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"App\">\n        <div className=\"page\">\n        \n          <Header/>\n\n          <Main \n              cards={cardsList}\n              onEditAvatar={handleEditAvatarClick}\n              onEditProfile={handleEditProfileClick}\n              onAddPlace={handleAddPlaceClick}\n              onCardClick={handleCardClick}\n              onCardLike={handleCardLike}\n              onCardDelete={handleCardDelete}\n              onDeleteConfirmation={handleDeleteButtonClick}\n          />\n\n          <Footer/>\n\n          <EditProfilePopup isOpen={isEditProfilePopupOpen} \n                            onClose={closeAllPopups} \n                            onUpdateUser={handleUpdateUser}/>\n\n          <EditAvatarPopup isOpen={isEditAvatarPopupOpen} \n                           onClose={closeAllPopups} \n                           onUpdateAvatar={handleUpdateAvatar}/> \n\n          <AddPlacePopup isOpen={isAddPlacePopupOpen}\n                         onClose={closeAllPopups}\n                         onAddPlace={handleAddPlaceSubmit}/>\n\n          <ConfirmationPopup card={selectedCard}\n                             isOpen={isDeleteConfirmationPopupOpen}\n                             onClose={closeAllPopups}/>\n\n          {selectedCard &&<ImagePopup card={selectedCard} onClose={closeAllPopups}/>}\n        \n        </div>\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}