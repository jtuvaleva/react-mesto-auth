{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(response => response.ok ? response.json() : Promise.reject(\"\")).then(res => {\n    console.log(res);\n    return res;\n  }).catch(err => console.log(err));\n};\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(response => response.json()).catch(err => console.log(err));\n};\nexport const getContent = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  }).then(res => res.json()).then(data => data).catch(err => console.log(err));\n};\n/*\nexport const authorize = (identifier, password) => {\n  return fetch(`${BASE_URL}/auth/local`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({identifier, password})\n  })\n  .then((response => response.json()))\n  .then((data) => {\n    if (data.user){\n      localStorage.setItem('jwt', data.jwt);\n      return data;\n    } else {\n      return;\n    }\n  })\n  .catch(err => console.log(err))\n};\n*/","map":{"version":3,"sources":["/Users/juliatuvaleva/Desktop/dev/mestoReact/src/auth.js"],"names":["BASE_URL","register","password","email","fetch","method","headers","body","JSON","stringify","then","response","ok","json","Promise","reject","res","console","log","catch","err","authorize","getContent","token","data"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAAjB;AACP,OAAO,MAAMC,QAAQ,GAAG,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACzC,SAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;AAC/BK,IAAAA,MAAM,EAAE,MADuB;AAE/BC,IAAAA,OAAO,EAAE;AACL,gBAAU,kBADL;AAEL,sBAAgB;AAFX,KAFsB;AAM/BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACP,MAAAA,QAAD;AAAWC,MAAAA;AAAX,KAAf;AANyB,GAAvB,CAAL,CAQNO,IARM,CAQAC,QAAD,IAAcA,QAAQ,CAACC,EAAT,GAAcD,QAAQ,CAACE,IAAT,EAAd,GAAgCC,OAAO,CAACC,MAAR,CAAe,EAAf,CAR7C,EASNL,IATM,CASAM,GAAD,IAAS;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAOA,GAAP;AACH,GAZM,EAaNG,KAbM,CAaCC,GAAD,IAASH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAbT,CAAP;AAcH,CAfM;AAiBP,OAAO,MAAMC,SAAS,GAAG,CAAClB,KAAD,EAAQD,QAAR,KAAqB;AAC1C,SAAOE,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;AACjCK,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP,gBAAU,kBADH;AAEP,sBAAgB;AAFT,KAFwB;AAMjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACN,MAAAA,KAAD;AAAQD,MAAAA;AAAR,KAAf;AAN2B,GAAvB,CAAL,CAQNQ,IARM,CAQAC,QAAQ,IAAIA,QAAQ,CAACE,IAAT,EARZ,EASNM,KATM,CASAC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CATP,CAAP;AAUD,CAXI;AAaP,OAAO,MAAME,UAAU,GAAIC,KAAD,IAAW;AACjC,SAAOnB,KAAK,CAAE,GAAEJ,QAAS,WAAb,EAAyB;AACnCK,IAAAA,MAAM,EAAE,KAD2B;AAEnCC,IAAAA,OAAO,EAAE;AACP,gBAAU,kBADH;AAEP,sBAAgB,kBAFT;AAGP,uBAAkB,UAASiB,KAAM;AAH1B;AAF0B,GAAzB,CAAL,CAQNb,IARM,CAQDM,GAAG,IAAIA,GAAG,CAACH,IAAJ,EARN,EASNH,IATM,CASDc,IAAI,IAAIA,IATP,EAUNL,KAVM,CAUAC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAVP,CAAP;AAWH,CAZM;AAcP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\nexport const register = (password, email) => {\n    return fetch(`${BASE_URL}/signup`, {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({password, email})\n    })\n    .then((response) => response.ok ? response.json() : Promise.reject(\"\"))\n    .then((res) => {\n        console.log(res)\n        return res;\n    })\n    .catch((err) => console.log(err))\n}\n\nexport const authorize = (email, password) => {\n    return fetch(`${BASE_URL}/signin`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({email, password})\n    })\n    .then((response => response.json()))\n    .catch(err => console.log(err))\n  };\n\nexport const getContent = (token) => {\n    return fetch(`${BASE_URL}/users/me`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`,\n      }\n    })\n    .then(res => res.json())\n    .then(data => data)\n    .catch(err => console.log(err))\n}\n\n/*\nexport const authorize = (identifier, password) => {\n  return fetch(`${BASE_URL}/auth/local`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({identifier, password})\n  })\n  .then((response => response.json()))\n  .then((data) => {\n    if (data.user){\n      localStorage.setItem('jwt', data.jwt);\n      return data;\n    } else {\n      return;\n    }\n  })\n  .catch(err => console.log(err))\n};\n*/"]},"metadata":{},"sourceType":"module"}