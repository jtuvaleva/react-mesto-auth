{"ast":null,"code":"var _jsxFileName = \"/Users/juliatuvaleva/Desktop/dev/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport ImagePopup from './ImagePopup';\nimport React, { useEffect, useState } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { api } from '../utils/api.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [cardsList, setCards] = useState([]);\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState('');\n  useEffect(() => {\n    api.getProfileInfo().then(userData => {\n      setCurrentUser(userData);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  useEffect(() => {\n    api.getInitialCards().then(cardsData => {\n      setCards(cardsData);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setEditAvatarPopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  function handleUpdateUser(formData) {\n    api.editProfileInfo(formData).then(userData => {\n      setCurrentUser(userData);\n      setEditProfilePopupOpen(false);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  function handleUpdateAvatar(formLink) {\n    api.editProfilePhoto(formLink).then(userData => {\n      setCurrentUser(userData);\n      setEditAvatarPopupOpen(false);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      setCards(cards => cards.filter(c => c._id !== card._id));\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Main, {\n          onEditAvatar: handleEditAvatarClick,\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          onCardClick: handleCardClick,\n          cards: cardsList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          isOpen: isEditProfilePopupOpen,\n          onClose: closeAllPopups,\n          onUpdateUser: handleUpdateUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          isOpen: isEditAvatarPopupOpen,\n          onClose: closeAllPopups,\n          onUpdateAvatar: handleUpdateAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n          name: \"cards\",\n          title: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\",\n          isOpen: isAddPlacePopupOpen,\n          onClose: closeAllPopups,\n          buttonText: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n            id: \"cardName\",\n            name: \"name\",\n            className: \"popup__form-input popup__form-input_field_image-name\",\n            required: true,\n            minLength: \"2\",\n            maxLength: \"30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"popup__form-error cardName-error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"url\",\n            placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n            id: \"cardLink\",\n            name: \"link\",\n            className: \"popup__form-input popup__form-input_field_image-src\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"popup__form-error cardLink-error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n          name: \"submit-delete\",\n          title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n          buttonText: \"\\u0414\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), selectedCard && /*#__PURE__*/_jsxDEV(ImagePopup, {\n          card: selectedCard,\n          onClose: () => {\n            closeAllPopups();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"AsCgXWEE2JfQDNelpVWd6fixc6o=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/juliatuvaleva/Desktop/dev/mesto-react/src/components/App.js"],"names":["Header","Main","Footer","PopupWithForm","EditProfilePopup","EditAvatarPopup","ImagePopup","React","useEffect","useState","CurrentUserContext","api","App","cardsList","setCards","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","getProfileInfo","then","userData","catch","error","console","log","getInitialCards","cardsData","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","handleCardClick","card","closeAllPopups","handleUpdateUser","formData","editProfileInfo","handleUpdateAvatar","formLink","editProfilePhoto","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","state","map","c","handleCardDelete","deleteCard","cards","filter"],"mappings":"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","sourcesContent":["import Header from './Header'\nimport Main from './Main'\nimport Footer from './Footer'\nimport PopupWithForm from './PopupWithForm'\nimport EditProfilePopup from './EditProfilePopup'\nimport EditAvatarPopup from './EditAvatarPopup'\nimport ImagePopup from './ImagePopup'\nimport React, { useEffect, useState } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport {api} from '../utils/api.js';\n\nfunction App () {\n  const [cardsList, setCards] = useState([]);\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState('');\n\n  useEffect(()=>{\n    api.getProfileInfo()\n      .then((userData) => {\n          setCurrentUser(userData);\n      })\n      .catch( (error) => {\n          console.log(error);\n      });\n  }, [])\n\n  useEffect(()=>{\n    api.getInitialCards()\n      .then((cardsData) => {\n          setCards(cardsData);\n       })\n      .catch( (error) => {\n          console.log(error);\n      });\n  }, [])\n\n\n  function handleEditProfileClick () {\n    setEditProfilePopupOpen(true)\n  }\n\n  function handleAddPlaceClick () {\n    setAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick () {\n    setEditAvatarPopupOpen(true);\n  }\n\n  function handleCardClick (card) {\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setEditProfilePopupOpen(false)\n    setAddPlacePopupOpen(false)\n    setEditAvatarPopupOpen(false)\n    setSelectedCard(null)\n  }\n  \n  function handleUpdateUser (formData) {\n    api.editProfileInfo(formData)\n      .then((userData) => {\n        setCurrentUser(userData);\n        setEditProfilePopupOpen(false)\n       })\n      .catch( (error) => {\n          console.log(error);\n      });\n  }\n\n  function handleUpdateAvatar (formLink) {\n    api.editProfilePhoto(formLink)\n      .then((userData) => {\n        setCurrentUser(userData);\n        setEditAvatarPopupOpen(false)\n       })\n      .catch( (error) => {\n          console.log(error);\n      });\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    \n    api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n    });\n  } \n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id)\n        .then(() => {\n            setCards((cards) => cards.filter((c) => c._id !== card._id));\n    });\n  } \n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"App\">\n        <div className=\"page\">\n        \n          <Header/>\n\n          <Main \n              onEditAvatar={handleEditAvatarClick}\n              onEditProfile={handleEditProfileClick}\n              onAddPlace={handleAddPlaceClick}\n              onCardClick={handleCardClick}\n              cards={cardsList}\n          />\n\n          <Footer/>\n\n          <EditProfilePopup isOpen={isEditProfilePopupOpen} \n                            onClose={closeAllPopups} \n                            onUpdateUser={handleUpdateUser}/>\n\n          <EditAvatarPopup isOpen={isEditAvatarPopupOpen} \n                           onClose={closeAllPopups} \n                           onUpdateAvatar={handleUpdateAvatar}/> \n\n          <PopupWithForm name='cards' title='Новое место' \n                        isOpen = {isAddPlacePopupOpen}\n                        onClose={closeAllPopups}\n                        buttonText='Создать'>\n\n            <input type=\"text\" placeholder=\"Название\" id=\"cardName\" name=\"name\" \n              className=\"popup__form-input popup__form-input_field_image-name\" \n              required minLength=\"2\" maxLength=\"30\"/>\n            <span className=\"popup__form-error cardName-error\"></span>\n            <input type=\"url\" placeholder=\"Ссылка на картинку\" id=\"cardLink\" name=\"link\" \n              className=\"popup__form-input popup__form-input_field_image-src\" required/>\n            <span className=\"popup__form-error cardLink-error\"></span>\n          </PopupWithForm>\n\n          <PopupWithForm name='submit-delete' title='Вы уверены?' buttonText='Да'>\n          </PopupWithForm>\n\n          {selectedCard &&<ImagePopup card={selectedCard} onClose={() => {closeAllPopups()}}/>}\n        \n        </div>\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}