{"ast":null,"code":"export var BASE_URL='https://auth.nomoreparties.co';var checkResponse=function checkResponse(response){return response.ok?response.json():Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \".concat(response.sttus));};export var register=function register(password,email){console.log(password,email);return fetch(\"\".concat(BASE_URL,\"/signup\"),{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({password:password,email:email})}).then(checkResponse);};export var authorize=function authorize(email,password){return fetch(\"\".concat(BASE_URL,\"/signin\"),{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({email:email,password:password})}).then(checkResponse);};export var getContent=function getContent(token){return fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:'GET',headers:{'Accept':'application/json','Content-Type':'application/json','Authorization':\"Bearer \".concat(token)}}).then(checkResponse).catch(function(err){return console.log(err);});};/*\nexport const authorize = (identifier, password) => {\n  return fetch(`${BASE_URL}/auth/local`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({identifier, password})\n  })\n  .then((response => response.json()))\n  .then((data) => {\n    if (data.user){\n      localStorage.setItem('jwt', data.jwt);\n      return data;\n    } else {\n      return;\n    }\n  })\n  .catch(err => console.log(err))\n};\n*/","map":{"version":3,"sources":["/Users/juliatuvaleva/Desktop/dev/mestoReact/src/auth.js"],"names":["BASE_URL","checkResponse","response","ok","json","Promise","reject","sttus","register","password","email","console","log","fetch","method","headers","body","JSON","stringify","then","authorize","getContent","token","catch","err"],"mappings":"AAAA,MAAO,IAAMA,CAAAA,QAAQ,CAAG,+BAAjB,CACP,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,EAAT,CAAcD,QAAQ,CAACE,IAAT,EAAd,CAAgCC,OAAO,CAACC,MAAR,gDAAyBJ,QAAQ,CAACK,KAAlC,EAA9C,EAAtB,CAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,QAAD,CAAWC,KAAX,CAAqB,CACzCC,OAAO,CAACC,GAAR,CAAYH,QAAZ,CAAsBC,KAAtB,EACA,MAAOG,CAAAA,KAAK,WAAIb,QAAJ,YAAuB,CAC/Bc,MAAM,CAAE,MADuB,CAE/BC,OAAO,CAAE,CACL,SAAU,kBADL,CAEL,eAAgB,kBAFX,CAFsB,CAM/BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAACT,QAAQ,CAARA,QAAD,CAAWC,KAAK,CAALA,KAAX,CAAf,CANyB,CAAvB,CAAL,CAQNS,IARM,CAQDlB,aARC,CAAP,CASH,CAXM,CAaP,MAAO,IAAMmB,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACV,KAAD,CAAQD,QAAR,CAAqB,CAC1C,MAAOI,CAAAA,KAAK,WAAIb,QAAJ,YAAuB,CACjCc,MAAM,CAAE,MADyB,CAEjCC,OAAO,CAAE,CACP,SAAU,kBADH,CAEP,eAAgB,kBAFT,CAFwB,CAMjCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAACR,KAAK,CAALA,KAAD,CAAQD,QAAQ,CAARA,QAAR,CAAf,CAN2B,CAAvB,CAAL,CAQNU,IARM,CAQDlB,aARC,CAAP,CASD,CAVI,CAYP,MAAO,IAAMoB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CACjC,MAAOT,CAAAA,KAAK,WAAIb,QAAJ,cAAyB,CACnCc,MAAM,CAAE,KAD2B,CAEnCC,OAAO,CAAE,CACP,SAAU,kBADH,CAEP,eAAgB,kBAFT,CAGP,iCAA2BO,KAA3B,CAHO,CAF0B,CAAzB,CAAL,CAQNH,IARM,CAQDlB,aARC,EASNsB,KATM,CASA,SAAAC,GAAG,QAAIb,CAAAA,OAAO,CAACC,GAAR,CAAYY,GAAZ,CAAJ,EATH,CAAP,CAUH,CAXM,CAaP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\nconst checkResponse = (response) => response.ok ? response.json() : Promise.reject(`Ошибка ${response.sttus}`);\n\nexport const register = (password, email) => {\n    console.log(password, email);\n    return fetch(`${BASE_URL}/signup`, {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({password, email})\n    })\n    .then(checkResponse)\n}\n\nexport const authorize = (email, password) => {\n    return fetch(`${BASE_URL}/signin`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({email, password})\n    })\n    .then(checkResponse)\n  };\n\nexport const getContent = (token) => {\n    return fetch(`${BASE_URL}/users/me`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`,\n      }\n    })\n    .then(checkResponse)\n    .catch(err => console.log(err))\n}\n\n/*\nexport const authorize = (identifier, password) => {\n  return fetch(`${BASE_URL}/auth/local`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({identifier, password})\n  })\n  .then((response => response.json()))\n  .then((data) => {\n    if (data.user){\n      localStorage.setItem('jwt', data.jwt);\n      return data;\n    } else {\n      return;\n    }\n  })\n  .catch(err => console.log(err))\n};\n*/"]},"metadata":{},"sourceType":"module"}