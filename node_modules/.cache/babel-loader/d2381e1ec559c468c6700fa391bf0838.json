{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\n\nconst checkResponse = response => response.ok ? response.json() : Promise.reject(`Ошибка ${response.sttus}`);\n\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(checkResponse).catch(err => console.log(err));\n};\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(response => response.json()).catch(err => console.log(err));\n};\nexport const getContent = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  }).then(res => res.json()).then(data => data).catch(err => console.log(err));\n};\n/*\nexport const authorize = (identifier, password) => {\n  return fetch(`${BASE_URL}/auth/local`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({identifier, password})\n  })\n  .then((response => response.json()))\n  .then((data) => {\n    if (data.user){\n      localStorage.setItem('jwt', data.jwt);\n      return data;\n    } else {\n      return;\n    }\n  })\n  .catch(err => console.log(err))\n};\n*/","map":{"version":3,"sources":["/Users/juliatuvaleva/Desktop/dev/mestoReact/src/auth.js"],"names":["BASE_URL","checkResponse","response","ok","json","Promise","reject","sttus","register","password","email","fetch","method","headers","body","JSON","stringify","then","catch","err","console","log","authorize","getContent","token","res","data"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAAjB;;AACP,MAAMC,aAAa,GAAIC,QAAD,IAAcA,QAAQ,CAACC,EAAT,GAAcD,QAAQ,CAACE,IAAT,EAAd,GAAgCC,OAAO,CAACC,MAAR,CAAgB,UAASJ,QAAQ,CAACK,KAAM,EAAxC,CAApE;;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACzC,SAAOC,KAAK,CAAE,GAAEX,QAAS,SAAb,EAAuB;AAC/BY,IAAAA,MAAM,EAAE,MADuB;AAE/BC,IAAAA,OAAO,EAAE;AACL,gBAAU,kBADL;AAEL,sBAAgB;AAFX,KAFsB;AAM/BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACP,MAAAA,QAAD;AAAWC,MAAAA;AAAX,KAAf;AANyB,GAAvB,CAAL,CAQNO,IARM,CAQDhB,aARC,EASNiB,KATM,CASCC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CATT,CAAP;AAUH,CAXM;AAaP,OAAO,MAAMG,SAAS,GAAG,CAACZ,KAAD,EAAQD,QAAR,KAAqB;AAC1C,SAAOE,KAAK,CAAE,GAAEX,QAAS,SAAb,EAAuB;AACjCY,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP,gBAAU,kBADH;AAEP,sBAAgB;AAFT,KAFwB;AAMjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACN,MAAAA,KAAD;AAAQD,MAAAA;AAAR,KAAf;AAN2B,GAAvB,CAAL,CAQNQ,IARM,CAQAf,QAAQ,IAAIA,QAAQ,CAACE,IAAT,EARZ,EASNc,KATM,CASAC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CATP,CAAP;AAUD,CAXI;AAaP,OAAO,MAAMI,UAAU,GAAIC,KAAD,IAAW;AACjC,SAAOb,KAAK,CAAE,GAAEX,QAAS,WAAb,EAAyB;AACnCY,IAAAA,MAAM,EAAE,KAD2B;AAEnCC,IAAAA,OAAO,EAAE;AACP,gBAAU,kBADH;AAEP,sBAAgB,kBAFT;AAGP,uBAAkB,UAASW,KAAM;AAH1B;AAF0B,GAAzB,CAAL,CAQNP,IARM,CAQDQ,GAAG,IAAIA,GAAG,CAACrB,IAAJ,EARN,EASNa,IATM,CASDS,IAAI,IAAIA,IATP,EAUNR,KAVM,CAUAC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAVP,CAAP;AAWH,CAZM;AAcP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\nconst checkResponse = (response) => response.ok ? response.json() : Promise.reject(`Ошибка ${response.sttus}`);\n\nexport const register = (password, email) => {\n    return fetch(`${BASE_URL}/signup`, {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({password, email})\n    })\n    .then(checkResponse)\n    .catch((err) => console.log(err))\n}\n\nexport const authorize = (email, password) => {\n    return fetch(`${BASE_URL}/signin`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({email, password})\n    })\n    .then((response => response.json()))\n    .catch(err => console.log(err))\n  };\n\nexport const getContent = (token) => {\n    return fetch(`${BASE_URL}/users/me`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`,\n      }\n    })\n    .then(res => res.json())\n    .then(data => data)\n    .catch(err => console.log(err))\n}\n\n/*\nexport const authorize = (identifier, password) => {\n  return fetch(`${BASE_URL}/auth/local`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({identifier, password})\n  })\n  .then((response => response.json()))\n  .then((data) => {\n    if (data.user){\n      localStorage.setItem('jwt', data.jwt);\n      return data;\n    } else {\n      return;\n    }\n  })\n  .catch(err => console.log(err))\n};\n*/"]},"metadata":{},"sourceType":"module"}